#pragma version 8
intcblock 0 1 65536 11
bytecblock 0x 0x00 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xe623f08a // "register_creator(acfg,string,string)(bool,bool,uint64,string,string,uint64)"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x15b3b4c8 // "create_sound_nft(acfg,string,string,string,string,string,string,uint64,string,string,string,uint64,bool)(uint64,uint64,string,string,string,string,string,uint64,string,string,string,address,bool)"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x858ea6db // "create_art_nft(acfg,string,string,uint64,string,string,uint64,bool)(uint64,string,string,uint64,string,string,uint64,uint64,address,bool)"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x02bece11 // "hello(string)string"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hellocaster_11
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createartnftcaster_10
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createsoundnftcaster_9
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub registercreatorcaster_8
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
intc_1 // 1
return

// register_creator
registercreator_1:
proto 3 1
bytec_0 // ""
frame_dig -3
gtxns Sender
box_len
store 1
store 0
load 1
!
bz registercreator_1_l2
frame_dig -3
frame_dig -2
frame_dig -1
callsub createnftowner_5
registercreator_1_l2:
frame_dig -3
gtxns Sender
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 0
retsub

// create_sound_nft
createsoundnft_2:
proto 13 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
pushbytes 0x00056d75736963 // 0x00056d75736963
frame_bury 1
frame_dig -13
frame_dig 1
callsub ensureregisteredcreative_6
frame_dig -12
extract 2 0
box_len
store 5
store 4
load 5
!
assert
frame_dig -13
gtxns CreatedAssetID
frame_bury 2
frame_dig -13
gtxns Sender
frame_bury 3
frame_dig 3
len
pushint 32 // 32
==
assert
frame_dig 2
itob
frame_dig -2
itob
concat
frame_dig -11
frame_bury 8
frame_dig 8
frame_bury 7
pushint 73 // 73
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -10
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -9
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -8
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -7
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -6
itob
concat
frame_dig -5
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -4
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -3
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 3
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -1
setbit
concat
frame_dig 7
concat
frame_bury 4
frame_dig -12
extract 2 0
box_del
pop
frame_dig -12
extract 2 0
frame_dig 4
box_put
frame_dig 3
callsub incrementcreatornftcount_7
frame_dig -12
extract 2 0
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
retsub

// create_art_nft
createartnft_3:
proto 8 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -3
extract 2 0
box_len
store 15
store 14
load 15
!
assert
pushbytes 0x0003617274 // 0x0003617274
frame_bury 1
frame_dig -8
frame_dig 1
callsub ensureregisteredcreative_6
frame_dig -8
gtxns CreatedAssetID
frame_bury 2
frame_dig -8
gtxns Sender
frame_bury 3
frame_dig 3
len
pushint 32 // 32
==
assert
intc_0 // 0
frame_bury 4
frame_dig 2
itob
frame_dig -7
frame_bury 9
frame_dig 9
frame_bury 8
pushint 73 // 73
frame_bury 6
frame_dig 6
frame_dig 9
len
+
frame_bury 7
frame_dig 7
intc_2 // 65536
<
assert
frame_dig 6
itob
extract 6 0
concat
frame_dig -6
frame_bury 9
frame_dig 8
frame_dig 9
concat
frame_bury 8
frame_dig 7
frame_bury 6
frame_dig 6
frame_dig 9
len
+
frame_bury 7
frame_dig 7
intc_2 // 65536
<
assert
frame_dig 6
itob
extract 6 0
concat
frame_dig -5
itob
concat
frame_dig -4
frame_bury 9
frame_dig 8
frame_dig 9
concat
frame_bury 8
frame_dig 7
frame_bury 6
frame_dig 6
frame_dig 9
len
+
frame_bury 7
frame_dig 7
intc_2 // 65536
<
assert
frame_dig 6
itob
extract 6 0
concat
frame_dig -3
frame_bury 9
frame_dig 8
frame_dig 9
concat
frame_bury 8
frame_dig 7
frame_bury 6
frame_dig 6
itob
extract 6 0
concat
frame_dig -2
itob
concat
frame_dig 4
itob
concat
frame_dig 3
concat
bytec_1 // 0x00
intc_0 // 0
frame_dig -1
setbit
concat
frame_dig 8
concat
frame_bury 5
frame_dig -3
extract 2 0
box_del
pop
frame_dig -3
extract 2 0
frame_dig 5
box_put
frame_dig 3
callsub incrementcreatornftcount_7
frame_dig -3
extract 2 0
box_get
store 17
store 16
load 17
assert
load 16
frame_bury 0
retsub

// hello
hello_4:
proto 1 1
bytec_0 // ""
pushbytes 0x48656c6c6f2c20 // "Hello, "
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// create_nft_owner
createnftowner_5:
proto 3 0
intc_0 // 0
dupn 3
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
frame_bury 0
intc_0 // 0
frame_bury 1
intc_0 // 0
frame_bury 2
frame_dig -3
gtxns ConfigAsset
frame_bury 3
bytec_1 // 0x00
intc_0 // 0
frame_dig 0
setbit
intc_1 // 1
frame_dig 1
setbit
frame_dig 2
itob
concat
frame_dig -2
frame_bury 8
frame_dig 8
frame_bury 7
pushint 21 // 21
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -1
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 3
itob
concat
frame_dig 7
concat
frame_bury 4
frame_dig -3
gtxns Sender
box_del
pop
frame_dig -3
gtxns Sender
frame_dig 4
box_put
retsub

// ensure_registered_creative
ensureregisteredcreative_6:
proto 2 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -2
gtxns Sender
box_len
store 9
store 8
load 9
assert
frame_dig -2
gtxns Sender
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 0
frame_dig 0
intc_0 // 0
getbit
frame_bury 1
frame_dig 0
intc_1 // 1
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
intc_3 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
intc_3 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
frame_dig -1
extract 2 0
pushbytes 0x6d75736963 // "music"
==
bnz ensureregisteredcreative_6_l3
ensureregisteredcreative_6_l1:
frame_dig -1
extract 2 0
pushbytes 0x617274 // "art"
==
bz ensureregisteredcreative_6_l4
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_6_l4
ensureregisteredcreative_6_l3:
intc_1 // 1
frame_bury 1
b ensureregisteredcreative_6_l1
ensureregisteredcreative_6_l4:
bytec_1 // 0x00
intc_0 // 0
frame_dig 1
setbit
intc_1 // 1
frame_dig 2
setbit
frame_dig 3
itob
concat
frame_dig 4
frame_bury 10
frame_dig 10
frame_bury 9
pushint 21 // 21
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig 5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 9
concat
frame_bury 0
frame_dig -2
gtxns Sender
box_del
pop
frame_dig -2
gtxns Sender
frame_dig 0
box_put
retsub

// increment_creator_nft_count
incrementcreatornftcount_7:
proto 1 0
bytec_0 // ""
intc_0 // 0
dupn 2
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
frame_dig -1
box_get
store 13
store 12
load 13
assert
load 12
frame_bury 0
frame_dig 0
intc_1 // 1
extract_uint64
frame_bury 1
frame_dig 1
intc_1 // 1
+
frame_bury 1
frame_dig 0
intc_0 // 0
getbit
frame_bury 2
frame_dig 0
intc_1 // 1
getbit
frame_bury 3
frame_dig 0
frame_dig 0
pushint 9 // 9
extract_uint16
frame_dig 0
intc_3 // 11
extract_uint16
substring3
frame_bury 4
frame_dig 0
frame_dig 0
intc_3 // 11
extract_uint16
dig 1
len
substring3
frame_bury 5
frame_dig 0
pushint 13 // 13
extract_uint64
frame_bury 6
bytec_1 // 0x00
intc_0 // 0
frame_dig 2
setbit
intc_1 // 1
frame_dig 3
setbit
frame_dig 1
itob
concat
frame_dig 4
frame_bury 10
frame_dig 10
frame_bury 9
pushint 21 // 21
frame_bury 7
frame_dig 7
frame_dig 10
len
+
frame_bury 8
frame_dig 8
intc_2 // 65536
<
assert
frame_dig 7
itob
extract 6 0
concat
frame_dig 5
frame_bury 10
frame_dig 9
frame_dig 10
concat
frame_bury 9
frame_dig 8
frame_bury 7
frame_dig 7
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 9
concat
frame_bury 0
frame_dig -1
box_del
pop
frame_dig -1
frame_dig 0
box_put
retsub

// register_creator_caster
registercreatorcaster_8:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 3 // acfg
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
callsub registercreator_1
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_sound_nft_caster
createsoundnftcaster_9:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 5
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txna ApplicationArgs 7
btoi
frame_bury 8
txna ApplicationArgs 8
frame_bury 9
txna ApplicationArgs 9
frame_bury 10
txna ApplicationArgs 10
frame_bury 11
txna ApplicationArgs 11
btoi
frame_bury 12
txna ApplicationArgs 12
intc_0 // 0
pushint 8 // 8
*
getbit
frame_bury 13
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 3 // acfg
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
frame_dig 11
frame_dig 12
frame_dig 13
callsub createsoundnft_2
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// create_art_nft_caster
createartnftcaster_10:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
frame_bury 3
txna ApplicationArgs 3
btoi
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
btoi
frame_bury 7
txna ApplicationArgs 7
intc_0 // 0
pushint 8 // 8
*
getbit
frame_bury 8
txn GroupIndex
intc_1 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
pushint 3 // acfg
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
callsub createartnft_3
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub

// hello_caster
hellocaster_11:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub hello_4
frame_bury 0
bytec_2 // 0x151f7c75
frame_dig 0
concat
log
retsub